{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lockTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TXFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TimeOver",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "foundFailWithMoreEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "foundFailWithTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "founded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "getFoundFailWithNoReach",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "reFoundFailWithReach",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "reFoundWithNoBalance",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "txSucces",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "found",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getBalancOfAddr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFounders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTargetMoney",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reFound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa952f8587c068406673cb952feb3305fcdb0f9cb55ff3a78c2f375c27b1d9003",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1005881",
    "logsBloom": "0x
    "blockHash": "0xb2a8ada941999a64ef734eb094b6873f35a31ff78a986e7d8ecf39bf20ffa4bc",
    "transactionHash": "0xa952f8587c068406673cb952feb3305fcdb0f9cb55ff3a78c2f375c27b1d9003",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1005881",
    "status": 1,
    "byzantium": true
  },
  "args": [
    36000
  ],
  "numDeployments": 1,
  "solcInputHash": "02ead65be2d2cd59c8a52a7e032746fa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TXFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimeOver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"foundFailWithMoreEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"foundFailWithTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"founded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getFoundFailWithNoReach\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"reFoundFailWithReach\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"reFoundWithNoBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"txSucces\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"found\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getBalancOfAddr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFounders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargetMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reFound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/foundMe.sol\":\"foundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/foundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.26;\\r\\n import \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\nerror foundFailWithMoreEth();\\r\\nerror foundFailWithTime();\\r\\nerror getFoundFailWithNoReach();\\r\\nerror founded();\\r\\nerror NotOwner();\\r\\nerror TimeOver();\\r\\nerror TXFailed();\\r\\nerror reFoundFailWithReach();\\r\\nerror reFoundWithNoBalance();\\r\\ncontract foundMe {\\r\\n    //\\u4f17\\u7b79\\u5408\\u7ea6\\r\\n    // 1. \\u521b\\u5efa\\u4e00\\u4e2a\\u6536\\u6b3e\\u51fd\\u6570\\r\\n    // 2. \\u8bb0\\u5f55\\u6295\\u8d44\\u4eba\\u5e76\\u4e14\\u67e5\\u770b\\r\\n    // 3. \\u5728\\u9501\\u5b9a\\u671f\\u5185\\uff0c\\u8fbe\\u5230\\u76ee\\u6807\\u503c\\uff0c\\u751f\\u4ea7\\u5546\\u53ef\\u4ee5\\u63d0\\u6b3e\\r\\n    // 4. \\u5728\\u9501\\u5b9a\\u671f\\u5185\\uff0c\\u6ca1\\u6709\\u8fbe\\u5230\\u76ee\\u6807\\u503c\\uff0c\\u6295\\u8d44\\u4eba\\u5728\\u9501\\u5b9a\\u671f\\u4ee5\\u540e\\u9000\\u6b3e\\r\\n\\r\\n    mapping(address => uint) private founderTomount; //\\u6295\\u8d44\\u4eba\\u8bb0\\u5f55\\r\\n    address[] private founders; //\\u6295\\u8d44\\u4eba\\r\\n    uint256 private constant targetMoney=60*1e18; //\\u76ee\\u6807\\u8d44\\u91d1  100eth\\r\\n    address private immutable i_owner; \\r\\n    uint256 private constant min_value = 1*1e18; //\\u5355\\u6b21\\u6350\\u6b3e\\u6700\\u5c0f\\u91d1\\u989d eth\\r\\n    uint256 private immutable lockTime;  //\\u9501\\u5b9a\\u65f6\\u95f4 \\u5355\\u4f4d\\u79d2\\r\\n    uint256 private immutable startTime; //\\u5f00\\u59cb\\u65f6\\u95f4\\r\\n    bool private foundStatus = false; //\\u63d0\\u6b3e\\u72b6\\u6001\\r\\n    AggregatorV3Interface private priceFeed=AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306); //\\r\\n    event txSucces(address,uint256);\\r\\n    constructor(uint256 _lockTime) {\\r\\n        i_owner = msg.sender;\\r\\n        lockTime = _lockTime;\\r\\n        startTime = block.timestamp;\\r\\n    }\\r\\n\\r\\n    function found() external payable {\\r\\n        //\\u6536\\u6b3e\\u6350\\u8d60\\r\\n        // require(getRate(msg.value)>= min_value, \\\"please send more eth\\\");\\r\\n        // require(msg.value>= min_value, \\\"please send more eth\\\");//\\u8fd9\\u91cc\\u4e0d\\u4f7f\\u7528usd\\u8f6c\\u5316\\uff0c\\u65b9\\u4fbf\\u6bd4\\u8f83\\u7406\\u89e3\\r\\n        if(msg.value< min_value){//\\u4f7f\\u7528\\u81ea\\u5b9a\\u4e49\\u9519\\u8bef\\u66f4\\u8282\\u7701gas\\r\\n            revert foundFailWithMoreEth();\\r\\n        }\\r\\n        if(block.timestamp >=startTime + lockTime){\\r\\n            revert foundFailWithTime();\\r\\n        }\\r\\n        // require(block.timestamp < startTime + lockTime, \\\"time is expired\\\");\\r\\n        founderTomount[msg.sender] = msg.value;\\r\\n        founders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function getFound() external onlyOnwer timeOver {\\r\\n        //\\u63d0\\u6b3e\\r\\n        // require(address(this).balance >= targetMoney, \\\"target not reached\\\");\\r\\n        if(address(this).balance < targetMoney){\\r\\n            revert getFoundFailWithNoReach();\\r\\n        }\\r\\n        if(foundStatus){\\r\\n            revert founded();\\r\\n        }\\r\\n        // require(!foundStatus, \\\"you had founded\\\");\\r\\n        (bool success, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n\\r\\n        // require(success, \\\"transaction is failed\\\");\\r\\n        if(!success){\\r\\n            revert TXFailed();\\r\\n        }\\r\\n        address[] memory arr=founders;\\r\\n        uint256  foundersLen=arr.length;\\r\\n        for(uint256 i=0;i<foundersLen;i++){//\\u8d26\\u6237\\u5f52\\u96f6\\r\\n            address each=arr[i];\\r\\n            founderTomount[each]=0;\\r\\n        }\\r\\n        founders=new address[](0);\\r\\n        foundStatus = true;\\r\\n    }\\r\\n\\r\\n    function getBalancOfAddr(address addr) external view returns (uint256) {\\r\\n        //\\u6839\\u636e\\u8d26\\u6237\\u67e5\\u8be2\\u6350\\u6b3e\\u91d1\\u989d\\r\\n        return founderTomount[addr];\\r\\n    }\\r\\n\\r\\n    function reFound() external timeOver {\\r\\n        //\\u9000\\u6b3e\\r\\n        // require(address(this).balance < targetMoney, \\\"target is not reached\\\");\\r\\n        // require(founderTomount[msg.sender]>0,\\\"you have no balance\\\");\\r\\n        if(address(this).balance >= targetMoney){\\r\\n            revert reFoundFailWithReach();\\r\\n        }\\r\\n         uint256  currentBalance=founderTomount[msg.sender];\\r\\n        if(currentBalance<=0){\\r\\n            revert reFoundWithNoBalance();\\r\\n        }\\r\\n       \\r\\n        (bool success, ) = payable(msg.sender).call{\\r\\n            value: currentBalance\\r\\n        }(\\\"\\\");\\r\\n        // require(success, \\\"transaction is failed\\\");\\r\\n        if(!success){\\r\\n            revert TXFailed();\\r\\n        }\\r\\n        founderTomount[msg.sender] = 0;\\r\\n        uint256 foundersLen=founders.length;\\r\\n        for(uint256 i=0;i<foundersLen;i++){\\r\\n            address eachFounder=founders[i];\\r\\n            if(eachFounder==msg.sender){\\r\\n                    founders[i]=founders[founders.length-1];\\r\\n                    founders.pop();\\r\\n                    break;\\r\\n            }\\r\\n        }\\r\\n        emit txSucces(msg.sender,currentBalance);\\r\\n    }\\r\\n\\r\\n    modifier onlyOnwer() {\\r\\n        //\\u6743\\u9650\\u63a7\\u5236 \\u53ea\\u6709\\u5408\\u7ea6\\u90e8\\u7f72\\u8005\\r\\n        // require(msg.sender == i_owner, \\\"you are not owner\\\");\\r\\n        if(msg.sender!=i_owner){\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier timeOver() {\\r\\n        //\\u65f6\\u95f4\\u63a7\\u5236\\r\\n        // require(, \\\"time is over\\\");\\r\\n        if(block.timestamp <= startTime + lockTime){\\r\\n            revert TimeOver();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    function getFounders() external view returns(address[] memory){\\r\\n        return founders;\\r\\n    }\\r\\n    function getTargetMoney() external pure returns(uint256){\\r\\n        return targetMoney;\\r\\n    }\\r\\n    function getPrice() internal pure  returns(uint256){\\r\\n            // (,int256 price,,,)=priceFeed.latestRoundData(); //1eth\\u4e0e\\u7f8e\\u5143\\u7684\\u4ef7\\u683c\\u6bd4\\u4f8b 1eth : 3000*10*8\\r\\n            int256 price =3000*10**8;\\r\\n            return uint256(price*1e10); //\\u8fd9\\u91cc\\u8f6c\\u5316\\u4e3a1wei\\u5bf9\\u5e94\\u7684\\u7f8e\\u5143\\u4ef7\\u683c   10*18 wei :3000*10**18   \\u5408\\u7ea6\\u7a0b\\u5e8f\\u4e2d\\u9ed8\\u8ba4\\u90fd\\u662fwei\\u5355\\u4f4d\\r\\n    }\\r\\n    function getRate(uint256 amount) internal pure  returns(uint256){ //\\u8ba1\\u7b97\\u4f20\\u5165\\u7684eth\\u5bf9\\u5e94\\u7684\\u7f8e\\u5143\\u4ef7\\u683c amount\\u5355\\u4f4deth\\r\\n        uint256 price=getPrice();\\r\\n        uint256 ethPrice=(amount*price)/1e18;\\r\\n        return ethPrice;\\r\\n    }\\r\\n    function getBalance() external view returns(uint256){\\r\\n        return address(this).balance;\\r\\n    }\\r\\n    function getOwner() external view returns(address){\\r\\n        return i_owner;\\r\\n    }\\r\\n    function getStartTime() external view returns(uint256){\\r\\n        return startTime;\\r\\n    }\\r\\n    function getLockTime() external view returns(uint256){\\r\\n        return lockTime;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1e1924223a5494d4b71fd3e95a9a1a3cb6d519c6e25cb3492990ae2972b35f1a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040526000600260006101000a81548160ff02191690831515021790555073694aa1769357215de4fac081bf1f309adc325306600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561008057600080fd5b5060405161129138038061129183398181016040528101906100a29190610127565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060a081815250504260c0818152505050610154565b600080fd5b6000819050919050565b610104816100f1565b811461010f57600080fd5b50565b600081519050610121816100fb565b92915050565b60006020828403121561013d5761013c6100ec565b5b600061014b84828501610112565b91505092915050565b60805160a05160c0516110dd6101b46000396000818161027a015281816103b7015281816108350152610c7b01526000818161025901528181610396015281816108140152610c5301526000818161078f0152610b5501526110dd6000f3fe6080604052600436106100915760003560e01c8063893d20e811610059578063893d20e814610124578063943129391461014f578063b73cdd191461018c578063c0a4d64d146101b7578063c828371e146101e257610091565b806312065fe0146100965780633d750b28146100c15780636182180c146100cb5780637bf0bd69146100f6578063829006b31461010d575b600080fd5b3480156100a257600080fd5b506100ab61020d565b6040516100b89190610d5f565b60405180910390f35b6100c9610215565b005b3480156100d757600080fd5b506100e0610383565b6040516100ed9190610d5f565b60405180910390f35b34801561010257600080fd5b5061010b610394565b005b34801561011957600080fd5b5061012261078d565b005b34801561013057600080fd5b50610139610b51565b6040516101469190610dbb565b60405180910390f35b34801561015b57600080fd5b5061017660048036038101906101719190610e07565b610b79565b6040516101839190610d5f565b60405180910390f35b34801561019857600080fd5b506101a1610bc1565b6040516101ae9190610ef2565b60405180910390f35b3480156101c357600080fd5b506101cc610c4f565b6040516101d99190610d5f565b60405180910390f35b3480156101ee57600080fd5b506101f7610c77565b6040516102049190610d5f565b60405180910390f35b600047905090565b670de0b6b3a7640000341015610257576040517f101c74e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006102a39190610f43565b42106102db576040517f39d8dadc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000680340aad21b3b700000905090565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006103e09190610f43565b4211610418576040517fde5ef59900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b680340aad21b3b700000471061045a576040517ff67ae74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116104d7576040517fbd9652b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516104fd90610fa8565b60006040518083038185875af1925050503d806000811461053a576040519150601f19603f3d011682016040523d82523d6000602084013e61053f565b606091505b505090508061057a576040517f669751cb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600180549050905060005b8181101561074e576000600182815481106105e9576105e8610fbd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361074057600180808054905061065b9190610fec565b8154811061066c5761066b610fbd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600183815481106106ab576106aa610fbd565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548061070557610704611020565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555061074e565b5080806001019150506105cb565b507feb36f3281bbc6cc6d6be7c49dd863d0958961b564fc5b9ad9355584a97927539338460405161078092919061104f565b60405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610812576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061085e9190610f43565b4211610896576040517fde5ef59900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b680340aad21b3b7000004710156108d9576040517fb6ae771700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900460ff1615610920576040517f4e3fa46700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161094690610fa8565b60006040518083038185875af1925050503d8060008114610983576040519150601f19603f3d011682016040523d82523d6000602084013e610988565b606091505b50509050806109c3576040517f669751cb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001805480602002602001604051908101604052809291908181526020018280548015610a4757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109fd575b5050505050905060008151905060005b81811015610ad0576000838281518110610a7457610a73610fbd565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610a57565b50600067ffffffffffffffff811115610aec57610aeb611078565b5b604051908082528060200260200182016040528015610b1a5781602001602082028036833780820191505090505b5060019080519060200190610b30929190610c9f565b506001600260006101000a81548160ff021916908315150217905550505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805480602002602001604051908101604052809291908181526020018280548015610c4557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bfb575b5050505050905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b828054828255906000526020600020908101928215610d18579160200282015b82811115610d175782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610cbf565b5b509050610d259190610d29565b5090565b5b80821115610d42576000816000905550600101610d2a565b5090565b6000819050919050565b610d5981610d46565b82525050565b6000602082019050610d746000830184610d50565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610da582610d7a565b9050919050565b610db581610d9a565b82525050565b6000602082019050610dd06000830184610dac565b92915050565b600080fd5b610de481610d9a565b8114610def57600080fd5b50565b600081359050610e0181610ddb565b92915050565b600060208284031215610e1d57610e1c610dd6565b5b6000610e2b84828501610df2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e6981610d9a565b82525050565b6000610e7b8383610e60565b60208301905092915050565b6000602082019050919050565b6000610e9f82610e34565b610ea98185610e3f565b9350610eb483610e50565b8060005b83811015610ee5578151610ecc8882610e6f565b9750610ed783610e87565b925050600181019050610eb8565b5085935050505092915050565b60006020820190508181036000830152610f0c8184610e94565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f4e82610d46565b9150610f5983610d46565b9250828201905080821115610f7157610f70610f14565b5b92915050565b600081905092915050565b50565b6000610f92600083610f77565b9150610f9d82610f82565b600082019050919050565b6000610fb382610f85565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ff782610d46565b915061100283610d46565b925082820390508181111561101a57611019610f14565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60006040820190506110646000830185610dac565b6110716020830184610d50565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220eb3b12bc6914ffe3667caaee706529c6d8a59db045e14eb9491d4b8c568d833a64736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063893d20e811610059578063893d20e814610124578063943129391461014f578063b73cdd191461018c578063c0a4d64d146101b7578063c828371e146101e257610091565b806312065fe0146100965780633d750b28146100c15780636182180c146100cb5780637bf0bd69146100f6578063829006b31461010d575b600080fd5b3480156100a257600080fd5b506100ab61020d565b6040516100b89190610d5f565b60405180910390f35b6100c9610215565b005b3480156100d757600080fd5b506100e0610383565b6040516100ed9190610d5f565b60405180910390f35b34801561010257600080fd5b5061010b610394565b005b34801561011957600080fd5b5061012261078d565b005b34801561013057600080fd5b50610139610b51565b6040516101469190610dbb565b60405180910390f35b34801561015b57600080fd5b5061017660048036038101906101719190610e07565b610b79565b6040516101839190610d5f565b60405180910390f35b34801561019857600080fd5b506101a1610bc1565b6040516101ae9190610ef2565b60405180910390f35b3480156101c357600080fd5b506101cc610c4f565b6040516101d99190610d5f565b60405180910390f35b3480156101ee57600080fd5b506101f7610c77565b6040516102049190610d5f565b60405180910390f35b600047905090565b670de0b6b3a7640000341015610257576040517f101c74e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006102a39190610f43565b42106102db576040517f39d8dadc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000680340aad21b3b700000905090565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006103e09190610f43565b4211610418576040517fde5ef59900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b680340aad21b3b700000471061045a576040517ff67ae74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116104d7576040517fbd9652b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516104fd90610fa8565b60006040518083038185875af1925050503d806000811461053a576040519150601f19603f3d011682016040523d82523d6000602084013e61053f565b606091505b505090508061057a576040517f669751cb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600180549050905060005b8181101561074e576000600182815481106105e9576105e8610fbd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361074057600180808054905061065b9190610fec565b8154811061066c5761066b610fbd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600183815481106106ab576106aa610fbd565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548061070557610704611020565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555061074e565b5080806001019150506105cb565b507feb36f3281bbc6cc6d6be7c49dd863d0958961b564fc5b9ad9355584a97927539338460405161078092919061104f565b60405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610812576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061085e9190610f43565b4211610896576040517fde5ef59900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b680340aad21b3b7000004710156108d9576040517fb6ae771700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900460ff1615610920576040517f4e3fa46700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161094690610fa8565b60006040518083038185875af1925050503d8060008114610983576040519150601f19603f3d011682016040523d82523d6000602084013e610988565b606091505b50509050806109c3576040517f669751cb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001805480602002602001604051908101604052809291908181526020018280548015610a4757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109fd575b5050505050905060008151905060005b81811015610ad0576000838281518110610a7457610a73610fbd565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610a57565b50600067ffffffffffffffff811115610aec57610aeb611078565b5b604051908082528060200260200182016040528015610b1a5781602001602082028036833780820191505090505b5060019080519060200190610b30929190610c9f565b506001600260006101000a81548160ff021916908315150217905550505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805480602002602001604051908101604052809291908181526020018280548015610c4557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bfb575b5050505050905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b828054828255906000526020600020908101928215610d18579160200282015b82811115610d175782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610cbf565b5b509050610d259190610d29565b5090565b5b80821115610d42576000816000905550600101610d2a565b5090565b6000819050919050565b610d5981610d46565b82525050565b6000602082019050610d746000830184610d50565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610da582610d7a565b9050919050565b610db581610d9a565b82525050565b6000602082019050610dd06000830184610dac565b92915050565b600080fd5b610de481610d9a565b8114610def57600080fd5b50565b600081359050610e0181610ddb565b92915050565b600060208284031215610e1d57610e1c610dd6565b5b6000610e2b84828501610df2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e6981610d9a565b82525050565b6000610e7b8383610e60565b60208301905092915050565b6000602082019050919050565b6000610e9f82610e34565b610ea98185610e3f565b9350610eb483610e50565b8060005b83811015610ee5578151610ecc8882610e6f565b9750610ed783610e87565b925050600181019050610eb8565b5085935050505092915050565b60006020820190508181036000830152610f0c8184610e94565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f4e82610d46565b9150610f5983610d46565b9250828201905080821115610f7157610f70610f14565b5b92915050565b600081905092915050565b50565b6000610f92600083610f77565b9150610f9d82610f82565b600082019050919050565b6000610fb382610f85565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ff782610d46565b915061100283610d46565b925082820390508181111561101a57611019610f14565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60006040820190506110646000830185610dac565b6110716020830184610d50565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220eb3b12bc6914ffe3667caaee706529c6d8a59db045e14eb9491d4b8c568d833a64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 149,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "founderTomount",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 152,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "founders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 171,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "foundStatus",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 177,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "priceFeed",
        "offset": 1,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}