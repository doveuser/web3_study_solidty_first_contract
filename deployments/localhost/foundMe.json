{
  "address": "0xFA8f68BA19fE2c5943d182308d1B4AF5b7809089",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lockTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "found",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getBalancOfAddr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFounders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTargetMoney",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reFound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfec3e4cbc655b8c4ce839cad548d8599c3e842573e5560bf407319865367ae33",
  "receipt": {
    "to": null,
    "from": "0xd060f79d5c4f3aF0667b936614f9EfEDf7a08655",
    "contractAddress": "0xFA8f68BA19fE2c5943d182308d1B4AF5b7809089",
    "transactionIndex": 0,
    "gasUsed": "1245629",
    "logsBloom": "0x
    "blockHash": "0x262e541cd7303d31197582f457efa7d8d70c20fb9ee58fba8e09fdfb135ddc29",
    "transactionHash": "0xfec3e4cbc655b8c4ce839cad548d8599c3e842573e5560bf407319865367ae33",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1245629",
    "status": 1,
    "byzantium": true
  },
  "args": [
    180
  ],
  "numDeployments": 1,
  "solcInputHash": "c54d94ac92b162952d97a5788d720887",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"found\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getBalancOfAddr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFounders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargetMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reFound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/foundMe.sol\":\"foundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/foundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.26;\\r\\n import \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\ncontract foundMe {\\r\\n    //\\u4f17\\u7b79\\u5408\\u7ea6\\r\\n    // 1. \\u521b\\u5efa\\u4e00\\u4e2a\\u6536\\u6b3e\\u51fd\\u6570\\r\\n    // 2. \\u8bb0\\u5f55\\u6295\\u8d44\\u4eba\\u5e76\\u4e14\\u67e5\\u770b\\r\\n    // 3. \\u5728\\u9501\\u5b9a\\u671f\\u5185\\uff0c\\u8fbe\\u5230\\u76ee\\u6807\\u503c\\uff0c\\u751f\\u4ea7\\u5546\\u53ef\\u4ee5\\u63d0\\u6b3e\\r\\n    // 4. \\u5728\\u9501\\u5b9a\\u671f\\u5185\\uff0c\\u6ca1\\u6709\\u8fbe\\u5230\\u76ee\\u6807\\u503c\\uff0c\\u6295\\u8d44\\u4eba\\u5728\\u9501\\u5b9a\\u671f\\u4ee5\\u540e\\u9000\\u6b3e\\r\\n\\r\\n    mapping(address => uint) founderTomount; //\\u6295\\u8d44\\u4eba\\u8bb0\\u5f55\\r\\n    address[] private founders; //\\u6295\\u8d44\\u4eba\\r\\n    uint256 private targetMoney=50*1e18; //\\u76ee\\u6807\\u8d44\\u91d1  100eth\\r\\n    address public owner; \\r\\n    uint256 private min_value = 50*1e18; //\\u5355\\u6b21\\u6350\\u6b3e\\u6700\\u5c0f\\u91d1\\u989d eth\\r\\n    uint256 public lockTime;  //\\u9501\\u5b9a\\u65f6\\u95f4 \\u5355\\u4f4d\\u79d2\\r\\n    uint256 startTime; //\\u5f00\\u59cb\\u65f6\\u95f4\\r\\n    bool foundStatus = false; //\\u63d0\\u6b3e\\u72b6\\u6001\\r\\n    AggregatorV3Interface private priceFeed=AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306); //\\r\\n  \\r\\n    constructor(uint256 _lockTime) {\\r\\n        owner = msg.sender;\\r\\n        lockTime = _lockTime;\\r\\n        startTime = block.timestamp;\\r\\n    }\\r\\n\\r\\n    function found() external payable {\\r\\n        //\\u6536\\u6b3e\\u6350\\u8d60\\r\\n        // require(getRate(msg.value)>= min_value, \\\"please send more eth\\\");\\r\\n        require(msg.value>= min_value, \\\"please send more eth\\\");//\\u8fd9\\u91cc\\u4e0d\\u4f7f\\u7528usd\\u8f6c\\u5316\\uff0c\\u65b9\\u4fbf\\u6bd4\\u8f83\\u7406\\u89e3\\r\\n        \\r\\n        require(block.timestamp < startTime + lockTime, \\\"time is expired\\\");\\r\\n        founderTomount[msg.sender] = msg.value;\\r\\n        founders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function getFound() external onlyOnwer timeOver {\\r\\n        //\\u63d0\\u6b3e\\r\\n        require(address(this).balance >= targetMoney, \\\"target not reached\\\");\\r\\n        require(!foundStatus, \\\"you had founded\\\");\\r\\n        (bool success, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(success, \\\"transaction is failed\\\");\\r\\n        for(uint256 i=0;i<founders.length;i++){//\\u8d26\\u6237\\u5f52\\u96f6\\r\\n            founderTomount[founders[i]]=0;\\r\\n        }\\r\\n        founders=new address[](0);\\r\\n        foundStatus = true;\\r\\n    }\\r\\n\\r\\n    function getBalancOfAddr(address addr) public view returns (uint256) {\\r\\n        //\\u6839\\u636e\\u8d26\\u6237\\u67e5\\u8be2\\u6350\\u6b3e\\u91d1\\u989d\\r\\n        return founderTomount[addr];\\r\\n    }\\r\\n\\r\\n    function reFound() external timeOver {\\r\\n        //\\u9000\\u6b3e\\r\\n        (bool success, ) = payable(msg.sender).call{\\r\\n            value: founderTomount[msg.sender]\\r\\n        }(\\\"\\\");\\r\\n        require(success, \\\"transaction is failed\\\");\\r\\n        founderTomount[msg.sender] = 0;\\r\\n        for(uint256 i=0;i<founders.length;i++){\\r\\n            if(founders[i]==msg.sender){\\r\\n                    founders[i]=founders[founders.length];\\r\\n                    break;\\r\\n            }\\r\\n        }\\r\\n        founders.pop();\\r\\n        \\r\\n    }\\r\\n\\r\\n    modifier onlyOnwer() {\\r\\n        //\\u6743\\u9650\\u63a7\\u5236 \\u53ea\\u6709\\u5408\\u7ea6\\u90e8\\u7f72\\u8005\\r\\n        require(msg.sender == owner, \\\"you are not owner\\\");\\r\\n        _;\\r\\n    }\\r\\n    modifier timeOver() {\\r\\n        //\\u65f6\\u95f4\\u63a7\\u5236\\r\\n        require(block.timestamp > startTime + lockTime, \\\"time is over\\\");\\r\\n        _;\\r\\n    }\\r\\n    function getFounders() public view returns(address[] memory){\\r\\n        return founders;\\r\\n    }\\r\\n    function getTargetMoney() public view returns(uint256){\\r\\n        return targetMoney;\\r\\n    }\\r\\n    function getPrice() internal pure  returns(uint256){\\r\\n            // (,int256 price,,,)=priceFeed.latestRoundData(); //1eth\\u4e0e\\u7f8e\\u5143\\u7684\\u4ef7\\u683c\\u6bd4\\u4f8b 1eth : 3000*10*8\\r\\n            int256 price =3000*10**8;\\r\\n\\r\\n            return uint256(price*1e10); //\\u8fd9\\u91cc\\u8f6c\\u5316\\u4e3a1wei\\u5bf9\\u5e94\\u7684\\u7f8e\\u5143\\u4ef7\\u683c   10*18 wei :3000*10**18   \\u5408\\u7ea6\\u7a0b\\u5e8f\\u4e2d\\u9ed8\\u8ba4\\u90fd\\u662fwei\\u5355\\u4f4d\\r\\n    }\\r\\n    function getRate(uint256 amount) public pure  returns(uint256){ //\\u8ba1\\u7b97\\u4f20\\u5165\\u7684eth\\u5bf9\\u5e94\\u7684\\u7f8e\\u5143\\u4ef7\\u683c amount\\u5355\\u4f4deth\\r\\n        uint256 price=getPrice();\\r\\n        uint256 ethPrice=(amount*price)/1e18;\\r\\n        return ethPrice;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x83f3e12313a054b687e5723b2f5320d32cba5c7bbfa0db0cfb60bc3d3b97cbe8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b18800006002556802b5e3af16b18800006004556000600760006101000a81548160ff02191690831515021790555073694aa1769357215de4fac081bf1f309adc325306600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561009a57600080fd5b506040516114b63803806114b683398181016040528101906100bc919061014c565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806005819055504260068190555050610179565b600080fd5b6000819050919050565b61012981610116565b811461013457600080fd5b50565b60008151905061014681610120565b92915050565b60006020828403121561016257610161610111565b5b600061017084828501610137565b91505092915050565b61132e806101886000396000f3fe6080604052600436106100865760003560e01c80637bf0bd69116100595780637bf0bd6914610128578063829006b31461013f5780638da5cb5b146101565780639431293914610181578063b73cdd19146101be57610086565b80630d6680871461008b5780633d750b28146100b657806357764094146100c05780636182180c146100fd575b600080fd5b34801561009757600080fd5b506100a06101e9565b6040516100ad9190610b8b565b60405180910390f35b6100be6101ef565b005b3480156100cc57600080fd5b506100e760048036038101906100e29190610bd7565b61032d565b6040516100f49190610b8b565b60405180910390f35b34801561010957600080fd5b50610112610367565b60405161011f9190610b8b565b60405180910390f35b34801561013457600080fd5b5061013d610371565b005b34801561014b57600080fd5b5061015461066d565b005b34801561016257600080fd5b5061016b6109ad565b6040516101789190610c45565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610c8c565b6109d3565b6040516101b59190610b8b565b60405180910390f35b3480156101ca57600080fd5b506101d3610a1b565b6040516101e09190610d77565b60405180910390f35b60055481565b600454341015610234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022b90610df6565b60405180910390fd5b6005546006546102449190610e45565b4210610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027c90610ec5565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080610338610aa9565b90506000670de0b6b3a764000082856103519190610ee5565b61035b9190610f56565b90508092505050919050565b6000600254905090565b6005546006546103819190610e45565b42116103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990610fd3565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161042690611024565b60006040518083038185875af1925050503d8060008114610463576040519150601f19603f3d011682016040523d82523d6000602084013e610468565b606091505b50509050806104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a390611085565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060005b600180549050811015610622573373ffffffffffffffffffffffffffffffffffffffff166001828154811061052b5761052a6110a5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610615576001808054905081548110610589576105886110a5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600182815481106105c8576105c76110a5565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610622565b80806001019150506104f3565b506001805480610635576106346110d4565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f49061114f565b60405180910390fd5b60055460065461070d9190610e45565b421161074e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074590610fd3565b60405180910390fd5b600254471015610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a906111bb565b60405180910390fd5b600760009054906101000a900460ff16156107e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da90611227565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161080990611024565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b505090508061088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088690611085565b60405180910390fd5b60005b60018054905081101561092e576000806000600184815481106108b8576108b76110a5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080600101915050610892565b50600067ffffffffffffffff81111561094a57610949611247565b5b6040519080825280602002602001820160405280156109785781602001602082028036833780820191505090505b506001908051906020019061098e929190610acb565b506001600760006101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805480602002602001604051908101604052809291908181526020018280548015610a9f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a55575b5050505050905090565b6000806445d964b80090506402540be40081610ac59190611280565b91505090565b828054828255906000526020600020908101928215610b44579160200282015b82811115610b435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aeb565b5b509050610b519190610b55565b5090565b5b80821115610b6e576000816000905550600101610b56565b5090565b6000819050919050565b610b8581610b72565b82525050565b6000602082019050610ba06000830184610b7c565b92915050565b600080fd5b610bb481610b72565b8114610bbf57600080fd5b50565b600081359050610bd181610bab565b92915050565b600060208284031215610bed57610bec610ba6565b5b6000610bfb84828501610bc2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c2f82610c04565b9050919050565b610c3f81610c24565b82525050565b6000602082019050610c5a6000830184610c36565b92915050565b610c6981610c24565b8114610c7457600080fd5b50565b600081359050610c8681610c60565b92915050565b600060208284031215610ca257610ca1610ba6565b5b6000610cb084828501610c77565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cee81610c24565b82525050565b6000610d008383610ce5565b60208301905092915050565b6000602082019050919050565b6000610d2482610cb9565b610d2e8185610cc4565b9350610d3983610cd5565b8060005b83811015610d6a578151610d518882610cf4565b9750610d5c83610d0c565b925050600181019050610d3d565b5085935050505092915050565b60006020820190508181036000830152610d918184610d19565b905092915050565b600082825260208201905092915050565b7f706c656173652073656e64206d6f726520657468000000000000000000000000600082015250565b6000610de0601483610d99565b9150610deb82610daa565b602082019050919050565b60006020820190508181036000830152610e0f81610dd3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e5082610b72565b9150610e5b83610b72565b9250828201905080821115610e7357610e72610e16565b5b92915050565b7f74696d6520697320657870697265640000000000000000000000000000000000600082015250565b6000610eaf600f83610d99565b9150610eba82610e79565b602082019050919050565b60006020820190508181036000830152610ede81610ea2565b9050919050565b6000610ef082610b72565b9150610efb83610b72565b9250828202610f0981610b72565b91508282048414831517610f2057610f1f610e16565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f6182610b72565b9150610f6c83610b72565b925082610f7c57610f7b610f27565b5b828204905092915050565b7f74696d65206973206f7665720000000000000000000000000000000000000000600082015250565b6000610fbd600c83610d99565b9150610fc882610f87565b602082019050919050565b60006020820190508181036000830152610fec81610fb0565b9050919050565b600081905092915050565b50565b600061100e600083610ff3565b915061101982610ffe565b600082019050919050565b600061102f82611001565b9150819050919050565b7f7472616e73616374696f6e206973206661696c65640000000000000000000000600082015250565b600061106f601583610d99565b915061107a82611039565b602082019050919050565b6000602082019050818103600083015261109e81611062565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f796f7520617265206e6f74206f776e6572000000000000000000000000000000600082015250565b6000611139601183610d99565b915061114482611103565b602082019050919050565b600060208201905081810360008301526111688161112c565b9050919050565b7f746172676574206e6f7420726561636865640000000000000000000000000000600082015250565b60006111a5601283610d99565b91506111b08261116f565b602082019050919050565b600060208201905081810360008301526111d481611198565b9050919050565b7f796f752068616420666f756e6465640000000000000000000000000000000000600082015250565b6000611211600f83610d99565b915061121c826111db565b602082019050919050565b6000602082019050818103600083015261124081611204565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b600061128b82611276565b915061129683611276565b92508282026112a481611276565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156112dc576112db610e16565b5b82820584148315176112f1576112f0610e16565b5b509291505056fea2646970667358221220516b0792a48545bb9a3007e203c08375e90273b7c6acfc8598031cfdcc9592bf64736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80637bf0bd69116100595780637bf0bd6914610128578063829006b31461013f5780638da5cb5b146101565780639431293914610181578063b73cdd19146101be57610086565b80630d6680871461008b5780633d750b28146100b657806357764094146100c05780636182180c146100fd575b600080fd5b34801561009757600080fd5b506100a06101e9565b6040516100ad9190610b8b565b60405180910390f35b6100be6101ef565b005b3480156100cc57600080fd5b506100e760048036038101906100e29190610bd7565b61032d565b6040516100f49190610b8b565b60405180910390f35b34801561010957600080fd5b50610112610367565b60405161011f9190610b8b565b60405180910390f35b34801561013457600080fd5b5061013d610371565b005b34801561014b57600080fd5b5061015461066d565b005b34801561016257600080fd5b5061016b6109ad565b6040516101789190610c45565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610c8c565b6109d3565b6040516101b59190610b8b565b60405180910390f35b3480156101ca57600080fd5b506101d3610a1b565b6040516101e09190610d77565b60405180910390f35b60055481565b600454341015610234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022b90610df6565b60405180910390fd5b6005546006546102449190610e45565b4210610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027c90610ec5565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080610338610aa9565b90506000670de0b6b3a764000082856103519190610ee5565b61035b9190610f56565b90508092505050919050565b6000600254905090565b6005546006546103819190610e45565b42116103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990610fd3565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161042690611024565b60006040518083038185875af1925050503d8060008114610463576040519150601f19603f3d011682016040523d82523d6000602084013e610468565b606091505b50509050806104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a390611085565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060005b600180549050811015610622573373ffffffffffffffffffffffffffffffffffffffff166001828154811061052b5761052a6110a5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610615576001808054905081548110610589576105886110a5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600182815481106105c8576105c76110a5565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610622565b80806001019150506104f3565b506001805480610635576106346110d4565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f49061114f565b60405180910390fd5b60055460065461070d9190610e45565b421161074e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074590610fd3565b60405180910390fd5b600254471015610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a906111bb565b60405180910390fd5b600760009054906101000a900460ff16156107e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da90611227565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161080990611024565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b505090508061088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088690611085565b60405180910390fd5b60005b60018054905081101561092e576000806000600184815481106108b8576108b76110a5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080600101915050610892565b50600067ffffffffffffffff81111561094a57610949611247565b5b6040519080825280602002602001820160405280156109785781602001602082028036833780820191505090505b506001908051906020019061098e929190610acb565b506001600760006101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805480602002602001604051908101604052809291908181526020018280548015610a9f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a55575b5050505050905090565b6000806445d964b80090506402540be40081610ac59190611280565b91505090565b828054828255906000526020600020908101928215610b44579160200282015b82811115610b435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aeb565b5b509050610b519190610b55565b5090565b5b80821115610b6e576000816000905550600101610b56565b5090565b6000819050919050565b610b8581610b72565b82525050565b6000602082019050610ba06000830184610b7c565b92915050565b600080fd5b610bb481610b72565b8114610bbf57600080fd5b50565b600081359050610bd181610bab565b92915050565b600060208284031215610bed57610bec610ba6565b5b6000610bfb84828501610bc2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c2f82610c04565b9050919050565b610c3f81610c24565b82525050565b6000602082019050610c5a6000830184610c36565b92915050565b610c6981610c24565b8114610c7457600080fd5b50565b600081359050610c8681610c60565b92915050565b600060208284031215610ca257610ca1610ba6565b5b6000610cb084828501610c77565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cee81610c24565b82525050565b6000610d008383610ce5565b60208301905092915050565b6000602082019050919050565b6000610d2482610cb9565b610d2e8185610cc4565b9350610d3983610cd5565b8060005b83811015610d6a578151610d518882610cf4565b9750610d5c83610d0c565b925050600181019050610d3d565b5085935050505092915050565b60006020820190508181036000830152610d918184610d19565b905092915050565b600082825260208201905092915050565b7f706c656173652073656e64206d6f726520657468000000000000000000000000600082015250565b6000610de0601483610d99565b9150610deb82610daa565b602082019050919050565b60006020820190508181036000830152610e0f81610dd3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e5082610b72565b9150610e5b83610b72565b9250828201905080821115610e7357610e72610e16565b5b92915050565b7f74696d6520697320657870697265640000000000000000000000000000000000600082015250565b6000610eaf600f83610d99565b9150610eba82610e79565b602082019050919050565b60006020820190508181036000830152610ede81610ea2565b9050919050565b6000610ef082610b72565b9150610efb83610b72565b9250828202610f0981610b72565b91508282048414831517610f2057610f1f610e16565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f6182610b72565b9150610f6c83610b72565b925082610f7c57610f7b610f27565b5b828204905092915050565b7f74696d65206973206f7665720000000000000000000000000000000000000000600082015250565b6000610fbd600c83610d99565b9150610fc882610f87565b602082019050919050565b60006020820190508181036000830152610fec81610fb0565b9050919050565b600081905092915050565b50565b600061100e600083610ff3565b915061101982610ffe565b600082019050919050565b600061102f82611001565b9150819050919050565b7f7472616e73616374696f6e206973206661696c65640000000000000000000000600082015250565b600061106f601583610d99565b915061107a82611039565b602082019050919050565b6000602082019050818103600083015261109e81611062565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f796f7520617265206e6f74206f776e6572000000000000000000000000000000600082015250565b6000611139601183610d99565b915061114482611103565b602082019050919050565b600060208201905081810360008301526111688161112c565b9050919050565b7f746172676574206e6f7420726561636865640000000000000000000000000000600082015250565b60006111a5601283610d99565b91506111b08261116f565b602082019050919050565b600060208201905081810360008301526111d481611198565b9050919050565b7f796f752068616420666f756e6465640000000000000000000000000000000000600082015250565b6000611211600f83610d99565b915061121c826111db565b602082019050919050565b6000602082019050818103600083015261124081611204565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b600061128b82611276565b915061129683611276565b92508282026112a481611276565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156112dc576112db610e16565b5b82820584148315176112f1576112f0610e16565b5b509291505056fea2646970667358221220516b0792a48545bb9a3007e203c08375e90273b7c6acfc8598031cfdcc9592bf64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 52,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "founderTomount",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 55,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "founders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 60,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "targetMoney",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 62,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 67,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "min_value",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 69,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "lockTime",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 71,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "startTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 74,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "foundStatus",
        "offset": 0,
        "slot": "7",
        "type": "t_bool"
      },
      {
        "astId": 80,
        "contract": "contracts/foundMe.sol:foundMe",
        "label": "priceFeed",
        "offset": 1,
        "slot": "7",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}